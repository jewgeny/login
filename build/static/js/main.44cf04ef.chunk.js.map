{"version":3,"sources":["components/Form.js","components/Navlist.js","components/UserArea.js","components/Logout.js","components/Anmelden.js","App.js","serviceWorker.js","index.js"],"names":["Form","react_default","a","createElement","Fragment","className","NavLink","to","onSubmit","this","props","formProps","handleSubmit","onChange","handleChange","ident","type","value","userName","password","hasFailed","Component","NavList","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","wantsOut","goToLogin","bind","assertThisInitialized","event","setState","unauthorize","onClick","Redirect","React","User","Navlist","Route","exact","path","render","Logout","isRedirectSet","count","_this2","timer","setInterval","clearInterval","setTimeout","resetFields","Anmelden","formPropsSignIn","handleSubmitSignIn","identsign","userNameSignIn","passwordSignIn","confirmToHome","App","isAuth","changeFormField","changeSignIn","target","getAttribute","preventDefault","ev","BrowserRouter","Form_Form","components_Anmelden","Switch","components_Logout","UserArea","Boolean","window","location","hostname","match","ReactDOM","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.44cf04ef.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport default class Form extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <h2 className=\"title display-4 text-primary text-center my-4\">Welcome to our starting Page</h2>\r\n        <div className=\"container my-4\">\r\n          <div className=\"jumbotron\">\r\n          <span className=\"float-right mb-2\">\r\n              <NavLink to=\"/anmelden\" className=\"nav-item\">Sign in</NavLink>\r\n          </span>\r\n            <form className=\"text-center\" onSubmit={this.props.formProps.handleSubmit}>\r\n              <div className=\"input-group mb-3 input-group-lg\">\r\n                 <div className=\"input-group-prepend\">\r\n                   <span className=\"input-group-text\">Username</span>\r\n                </div>\r\n                <input onChange={this.props.formProps.handleChange} ident=\"usr\" type=\"text\" className=\"form-control\" value={this.props.formProps.userName} />\r\n              </div>\r\n              <div className=\"input-group mb-3 input-group-lg\">\r\n                 <div className=\"input-group-prepend\">\r\n                   <span className=\"input-group-text\">Password</span>\r\n                </div>\r\n                <input onChange={this.props.formProps.handleChange} ident=\"pwd\" type=\"password\" className=\"form-control\" value={this.props.formProps.password}/>\r\n              </div>\r\n              <button type=\"submit\" className=\"btn btn-primary btn-lg\">Log in</button>\r\n              <span>\r\n\r\n              </span>\r\n            </form>\r\n            {this.props.formProps.hasFailed && <div className=\"alert alert-danger my-4\">Either username or password was incorrect. Try again!</div>}\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\n\r\n\r\nclass NavList extends React.Component{\r\n   constructor(props){\r\n      super(props);\r\n      this.state = {wantsOut: false}\r\n      this.goToLogin = this.goToLogin.bind(this);\r\n   }\r\n\r\n   goToLogin(event){\r\n       this.setState({wantsOut: true})\r\n   }\r\n\r\n   componentWillUnmount(){\r\n     this.props.unauthorize();\r\n   }\r\n\r\n\r\n  render(){\r\n      return(\r\n      <>\r\n        <ul className=\"nav my-4\">\r\n          <li className=\"nav-item\">\r\n            <NavLink to=\"/user\" className=\"nav-link\">Main</NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink to=\"/user/dashboard\" className=\"nav-link\">Dashboard</NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink to=\"/user/friends\" className=\"nav-link\">Your Friends</NavLink>\r\n          </li>\r\n\r\n          <li className=\"nav-item float-right\">\r\n            <button onClick={this.goToLogin} className=\"btn btn-danger btn-sm\">Sign Out</button>\r\n         </li>\r\n        </ul>\r\n\r\n        {this.state.wantsOut && <Redirect to=\"/logout\" />}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default NavList;\r\n","import React from \"react\";\r\nimport NavList from \"./Navlist\";\r\nimport {Route} from \"react-router-dom\";\r\n\r\nclass User extends React.Component{\r\n   render(){\r\n     return(\r\n       <>\r\n        <div className=\"container\">\r\n           <NavList unauthorize={this.props.unauthorize} />\r\n            <div className=\"jumbotron\">\r\n              <Route exact path=\"/user/\" render={() => <h2>Welcome home, {this.props.formProps.userName}</h2>}/>\r\n              <Route path=\"/user/dashboard\" render={() => <h2>{this.props.formProps.userName}, that is your dashboard </h2>}/>\r\n              <Route path=\"/user/friends\" render={() => <h2>{this.props.formProps.userName}, that are your friends</h2>}/>\r\n            </div>\r\n        </div>\r\n      </>\r\n     )\r\n   }\r\n}\r\n\r\nexport default User;\r\n","import React from \"react\";\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\n\r\nclass Logout extends React.Component{\r\n  constructor(props){\r\n     super(props);\r\n\r\n     this.state = {isRedirectSet: false, count: 5};\r\n  }\r\n\r\n  componentDidMount(){\r\n      const timer =  setInterval(() => {\r\n        if(this.state.count === 0){\r\n           clearInterval(timer);\r\n            setTimeout(() => this.setState({isRedirectSet: true}), 0);\r\n        }\r\n        else{\r\n           this.setState({count: this.state.count-1})\r\n         }\r\n       }, 1000);\r\n\r\n       this.props.resetFields();\r\n    }\r\n\r\n\r\n   render(){\r\n\r\n     return(\r\n      <>\r\n        <div className=\"container my-3\">\r\n          <div className=\"jumbotron\">\r\n            <h2>In {this.state.count} sec you will switch to Login Area</h2>\r\n            <p className=\"lead\">Or you can click\r\n               <NavLink to=\"/\" className=\"text-primary\"> here</NavLink>\r\n            </p>\r\n          </div>\r\n        </div>\r\n        {this.state.isRedirectSet && <Redirect to=\"/\" />}\r\n      </>\r\n     )\r\n   }\r\n}\r\n\r\nexport default Logout;\r\n","import React, {Component} from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nclass Anmelden extends Component{\r\n  render(){\r\n    return(\r\n      <>\r\n        <h2 className=\"title display-4 text-primary text-center my-4\">Sign in</h2>\r\n        <div className=\"container my-4\">\r\n          <div className=\"jumbotron\">\r\n          <span className=\"float-right mb-2\">\r\n              <NavLink to=\"/\" className=\"nav-item\">Back to home page </NavLink>\r\n          </span>\r\n            <form className=\"text-center\" onSubmit={this.props.formPropsSignIn.handleSubmitSignIn}>\r\n              <div className=\"input-group mb-3 input-group-lg\">\r\n                 <div className=\"input-group-prepend\">\r\n                   <span className=\"input-group-text\">Username</span>\r\n                </div>\r\n                <input onChange={this.props.formPropsSignIn.handleChange} identsign=\"usrsignin\" type=\"text\" className=\"form-control\" value={this.props.formPropsSignIn.userNameSignIn} />\r\n              </div>\r\n              <div className=\"input-group mb-3 input-group-lg\">\r\n                 <div className=\"input-group-prepend\">\r\n                   <span className=\"input-group-text\">Password</span>\r\n                </div>\r\n                <input onChange={this.props.formPropsSignIn.handleChange} identsign=\"pwdsignin\" type=\"password\" className=\"form-control\" value={this.props.formPropsSignIn.passwordSignIn}/>\r\n              </div>\r\n              <button type=\"submit\" className=\"btn btn-primary btn-lg\">Confirm</button>\r\n              <span>\r\n\r\n              </span>\r\n            </form>\r\n            {this.props.formPropsSignIn.confirmToHome &&\r\n                        <div className=\"alert alert-success my-4 d-flex justify-content-between align-items-center\">Go back to home page\r\n                         <NavLink to=\"/\">\r\n                           <button className=\"btn btn-success px-5\">Enter</button>\r\n                         </NavLink>\r\n                        </div>\r\n            }\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Anmelden;\r\n","import React, { Component } from 'react';\nimport Form from './components/Form';\nimport {BrowserRouter, Route, Redirect, Switch} from \"react-router-dom\";\nimport User from \"./components/UserArea\";\nimport Logout from \"./components/Logout\";\nimport Anmelden from \"./components/Anmelden\";\nimport \"./App.css\";\n\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {userName: '',\n                  password: '',\n                  hasFailed: false,\n                  isAuth: false,\n                  passwordSignIn: '',\n                  userNameSignIn: '',\n                  confirmToHome: false }\n\n    this.changeFormField = this.changeFormField.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.unauthorize = this.unauthorize.bind(this);\n    this.resetFields = this.resetFields.bind(this);\n    this.handleSubmitSignIn = this.handleSubmitSignIn.bind(this);\n    this.changeSignIn = this.changeSignIn.bind(this);\n  }\n\n  changeFormField(event) {\n    switch(event.target.getAttribute('ident')) {\n      case 'usr':\n        this.setState({userName: event.target.value});\n        break;\n        case 'pwd':\n        this.setState({password: event.target.value});\n        break;\n        default:\n        return;\n    }\n  }\n\n  changeSignIn(event){\n    switch(event.target.getAttribute(\"identsign\")){\n      case \"usrsignin\":\n      this.setState({userNameSignIn: event.target.value});\n      break;\n      case \"pwdsignin\":\n      this.setState({passwordSignIn: event.target.value});\n      break;\n      default:\n      return;\n    }\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    if (this.state.userName === this.state.userNameSignIn && this.state.password === this.state.passwordSignIn) {\n        this.setState({hasFailed: false,\n                      isAuth: true,\n                      confirmToHome: false,\n                      });\n    } else {\n      this.setState({hasFailed: true});\n    }\n  }\n\n  handleSubmitSignIn(event){\n    event.preventDefault();\n    this.setState({\n       confirmToHome: true\n    })\n  }\n\n  unauthorize(ev){\n     this.setState({isAuth: false})\n  }\n\n  resetFields(ev){\n     this.setState({\n        userName: \"\", password: \"\"\n     })\n  }\n\n  render() {\n    const formProps = {\n      userName: this.state.userName,\n      password: this.state.password,\n      handleChange: this.changeFormField,\n      handleSubmit:this.handleSubmit,\n      hasFailed: this.state.hasFailed\n    }\n\n    const formPropsSignIn = {\n      handleSubmitSignIn: this.handleSubmitSignIn,\n      handleChange: this.changeSignIn,\n      passwordSignIn: this.state.passwordSignIn,\n      userNameSignIn: this.state.userNameSignIn,\n      confirmToHome: this.state.confirmToHome\n    }\n\n    return (\n       <BrowserRouter>\n         <>\n             <Route exact path=\"/\" render={() => <Form formProps={ formProps }/>} />\n             <Route path=\"/anmelden\" render={() => <Anmelden formPropsSignIn= {formPropsSignIn} />} />\n              <Switch>\n                 <Route path=\"/logout\" render={() => <Logout  resetFields={this.resetFields} />}/>\n                 <Route path=\"/user\" render={() => <User unauthorize={this.unauthorize} formProps={formProps} />} />\n                 {this.state.isAuth && <Redirect to=\"/user\" />}\n              </Switch>\n\n      </>\n      </BrowserRouter>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"bootstrap/dist/css/bootstrap.css\";\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}